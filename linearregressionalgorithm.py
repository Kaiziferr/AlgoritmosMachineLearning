# -*- coding: utf-8 -*-
"""LinearRegressionAlgorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RMMnOfJ1xlqeVNUSB3MLdr9tsmdMwhfq
"""

import numpy as np
import matplotlib.pyplot as plt

#Funcion de regresi√≥n
def estimate_b0_b1(x,y):
  n = np.size(x)
  #Obtenemos los promedios
  m_x, m_y = np.mean(x), np.mean(y)
  #Calcular la sumatoria de xy y mi sumatoria xx
  sumatoria_xy = np.sum((x - m_x)*(y-m_y))
  sumatoria_xx = np.sum(x*(x-m_x))

  #coeficientes de regresion
  b_1 = sumatoria_xy / sumatoria_xx
  b_0 = m_y - b_1 * m_x

  return (b_0,b_1)

# Funcion de grafica
def plot_regresion(x, y, b):
  plt.scatter(x, y, color = "b", marker="o", s = 30)

  y_pred = b[0] + b[1]*x
  plt.plot(x,y_pred, color = "g")

  #Etiqueteado
  plt.xlabel('x-Independiente')
  plt.ylabel('y-Dependiente')

  plt.show()

#Codigo main
def main():
  #Dataset
  x = np.array([1,2,3,4,5])
  y = np.array([2,3,5,6,5])

  #Obtener b1 y b2
  b = estimate_b0_b1(x, y)
  print('Los valores b0 = {}, b1 = {}'.format(b[0], b[1]))

  plot_regresion(x, y, b)

if __name__ == "__main__":
  main()